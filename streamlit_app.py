import streamlit as st
import requests
import datetime
import re

BASE_URL = "http://localhost:8000"

st.set_page_config(
    page_title="TripWise AI",
    page_icon="üåç",
    layout="wide",
    initial_sidebar_state="expanded",
)

st.markdown("""
<style>
.title {
    font-size: 2.5rem;
    font-weight: bold;
    color: #2E86AB;
    text-align: center;
    padding-bottom: 0.5rem;
}
.subheader {
    font-size: 1.2rem;
    color: #333333;
    text-align: center;
    margin-bottom: 2rem;
}
.box {
    background-color: #ffffff;
    color: black;
    padding: 1.5rem;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    line-height: 1.6;
}
</style>
""", unsafe_allow_html=True)

st.markdown("<div class='title'>TripWise AI - Your Travel Planner</div>", unsafe_allow_html=True)

if "messages" not in st.session_state:
    st.session_state.messages = []

st.markdown("<div class='subheader'>How can I help you plan your trip? Let me know where you'd like to visit.</div>", unsafe_allow_html=True)

with st.form(key="query_form", clear_on_submit=True):
    with st.container():
        user_input = st.text_input("", placeholder="e.g. Plan a trip to Goa for 5 days")
        submit_button = st.form_submit_button("Generate Travel Plan üåç")

if submit_button and user_input.strip():
    try:
        with st.spinner("Generating your personalized itinerary..."):
            payload = {"question": user_input}
            response = requests.post(f"{BASE_URL}/query", json=payload)

        if response.status_code == 200:
            answer = response.json().get("answer", "No answer returned.")

            def clean_markdown_blocks(text):
                return re.sub(r"```(?:markdown|json)?\\n([\\s\\S]+?)\\n```", r"\1", text)

            answer = clean_markdown_blocks(answer)

            markdown_content = f"""
<div class='box'>

### üåç AI Travel Plan

**Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}  
**Created by:** Tripper's Travel Agent

---

{answer}

---

*This travel plan was generated by AI. Please verify all information, especially prices, operating hours, and travel requirements before your trip.*
</div>
"""
            st.markdown(markdown_content, unsafe_allow_html=True)
        else:
            st.error("Bot failed to respond: " + response.text)

    except Exception as e:
        st.error(f"The response failed due to: {e}")
